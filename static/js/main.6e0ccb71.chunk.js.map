{"version":3,"sources":["components/button/button.jsx","components/select/select.jsx","App.js","index.js"],"names":["Button","onClick","text","type","Select","onChange","id","minLength","Array","from","length","_","i","value","map","item","key","nanoid","goodsFromServer","App","state","goodsData","isVisible","setGoodsVisible","setState","sortBy","sort","a","b","localeCompare","reset","sortByLength","filterLength","filter","reverse","event","target","this","className","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGaA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACpB,4BACEC,KAAK,SACLF,QAASA,GAERC,ICJQE,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAC3BC,EAAYC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAE3D,OACE,4BAAQP,SAAUA,EAAUQ,MAAOP,GAChCC,EAAUO,KAAI,SAAAC,GAAI,OACjB,4BAAQC,IAAKC,eACVF,QCLLG,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA0FaC,E,4MAtFbC,MAAQ,CACNC,UAAU,GAAD,OAAMH,GACfZ,GAAI,EACJgB,WAAW,G,EAGbC,gBAAkB,WAChB,EAAKC,SAAS,CACZF,WAAW,K,EAIfG,OAAS,WACP,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,UAAWD,EAAMC,UAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI9DE,MAAQ,WACN,EAAKN,SAAS,CACZH,UAAU,GAAD,OAAMH,GACfZ,GAAI,K,EAIRyB,aAAe,WACb,EAAKP,UAAS,SAAAJ,GAAK,MAAK,CACtBC,UAAWD,EAAMC,UAAUK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,OAASkB,EAAElB,e,EAI3DsB,aAAe,WACb,EAAKR,UAAS,SAAAJ,GAAK,MAAK,CACtBC,UAAW,UAAIH,GAAiBe,QAAO,SAAAN,GAAC,OAAIA,EAAEjB,QAAUU,EAAMd,W,EAIlE4B,QAAU,WACR,EAAKV,UAAS,SAAAJ,GAAK,MAAK,CACtBC,UAAWD,EAAMC,UAAUa,e,EAI/B7B,SAAW,SAAC8B,GACV,IAAQtB,EAAUsB,EAAMC,OAAhBvB,MAER,EAAKW,SAAS,CACZlB,GAAIO,IAGN,EAAKmB,gB,4CAGP,WACE,IAAQE,EACsCG,KADtCH,QAAST,EAC6BY,KAD7BZ,OAAQK,EACqBO,KADrBP,MACvBC,EAA4CM,KAA5CN,aAAc1B,EAA8BgC,KAA9BhC,SAAUkB,EAAoBc,KAApBd,gBAC1B,EAAqCc,KAAKjB,MAAlCC,EAAR,EAAQA,UAAWf,EAAnB,EAAmBA,GAAIgB,EAAvB,EAAuBA,UAEvB,OACE,yBAAKgB,UAAU,OACXhB,EAEE,oCACE,qCACA,yBAAKgB,UAAU,QACXjB,EAAUP,KAAI,SAAAyB,GAAI,OAAI,uBAAGvB,IAAKC,eAAYsB,OAG9C,yBAAKD,UAAU,WACb,kBAAC,EAAD,CAAQrC,QAASiC,EAAShC,KAAK,YAC/B,kBAAC,EAAD,CAAQD,QAASwB,EAAQvB,KAAK,SAC9B,kBAAC,EAAD,CAAQD,QAAS6B,EAAO5B,KAAK,UAC7B,kBAAC,EAAD,CAAQD,QAAS8B,EAAc7B,KAAK,mBACpC,kBAAC,EAAD,CAAQG,SAAUA,EAAUC,GAAIA,MAKpC,kBAAC,EAAD,CAAQL,QAASsB,EAAiBrB,KAAK,e,GA/EjCsC,IAAMC,WCfxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6e0ccb71.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick, text }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nexport const Select = ({ onChange, id }) => {\n  const minLength = Array.from({ length: 10 }, (_, i) => i + 1);\n\n  return (\n    <select onChange={onChange} value={id}>\n      {minLength.map(item => (\n        <option key={nanoid()}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Button } from './components/button/button';\nimport { Select } from './components/select/select';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goodsData: [...goodsFromServer],\n    id: 1,\n    isVisible: false,\n  };\n\n  setGoodsVisible = () => {\n    this.setState({\n      isVisible: true,\n    });\n  }\n\n  sortBy = () => {\n    this.setState(state => ({\n      goodsData: state.goodsData.sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goodsData: [...goodsFromServer],\n      id: 1,\n    });\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goodsData: state.goodsData.sort((a, b) => a.length - b.length),\n    }));\n  }\n\n  filterLength = () => {\n    this.setState(state => ({\n      goodsData: [...goodsFromServer].filter(a => a.length >= state.id),\n    }));\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      goodsData: state.goodsData.reverse(),\n    }));\n  }\n\n  onChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      id: value,\n    });\n\n    this.filterLength();\n  }\n\n  render() {\n    const { reverse, sortBy, reset,\n      sortByLength, onChange, setGoodsVisible } = this;\n    const { goodsData, id, isVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        { isVisible\n          ? (\n            <>\n              <h1>Goods</h1>\n              <div className=\"list\">\n                { goodsData.map(good => <p key={nanoid()}>{ good }</p>) }\n              </div>\n\n              <div className=\"buttons\">\n                <Button onClick={reverse} text=\"Reverse\" />\n                <Button onClick={sortBy} text=\"Sort\" />\n                <Button onClick={reset} text=\"Reset\" />\n                <Button onClick={sortByLength} text=\"Sort by length\" />\n                <Select onChange={onChange} id={id} />\n              </div>\n            </>\n          )\n          : (\n            <Button onClick={setGoodsVisible} text=\"Start\" />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}